name: Build Ceres Solver DEB (Matrix)

on:
  workflow_call:

permissions:
  contents: write

jobs:
  build-ceres:
    name: Build Ceres Solver deb for ${{ matrix.arch }} Ubuntu${{ matrix.ubuntu }}
    env:
      PROJ_PATH: projects/ceres-solver
    strategy:
      matrix:
        include:
          - arch: amd64
            ubuntu: "20.04"
            runs_on: ubuntu-latest
            container_image: ubuntu:20.04
            use_chroot: false

          - arch: amd64
            ubuntu: "22.04"
            runs_on: ubuntu-latest
            container_image: ubuntu:22.04
            use_chroot: false

          - arch: amd64
            ubuntu: "24.04"
            runs_on: ubuntu-latest
            container_image: ubuntu:24.04
            use_chroot: false

          - arch: arm64
            ubuntu: "20.04"
            runs_on: ubuntu-latest
            container_image: ""
            use_chroot: true

          - arch: arm64
            ubuntu: "22.04"
            runs_on: ubuntu-latest
            container_image: ""
            use_chroot: true

          - arch: arm64
            ubuntu: "24.04"
            runs_on: ubuntu-latest
            container_image: ""
            use_chroot: true

    runs-on: ${{ matrix.runs_on }}
    container:
      image: ${{ matrix.container_image }}
      options: --privileged

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install common packages
        if: matrix.use_chroot == false
        run: |
          if ! command -v sudo >/dev/null 2>&1; then
            echo "[INFO] 'sudo' not found, installing..."
            apt update
            export DEBIAN_FRONTEND=noninteractive
            apt install -y sudo
          fi

          echo "[INFO] Installing common build tools..."
          sudo apt update
          export DEBIAN_FRONTEND=noninteractive
          sudo apt install -y git wget cmake make build-essential fakeroot dpkg-dev

      - name: Run build script (native/container)
        if: matrix.use_chroot == false
        run: |
          cd ${{ env.PROJ_PATH }}
          ARCH=${{ matrix.arch }} UBUNTU_VER=${{ matrix.ubuntu }} PROJ_PATH=${{ env.PROJ_PATH }} ./scripts/build_deb.sh

      - name: Run build script (chroot)
        if: matrix.use_chroot
        uses: ./.github/actions/arm64-build
        with:
          ubuntu_version: ${{ matrix.ubuntu }}
          build_script: projects/ceres-solver/scripts/build_deb.sh

      - name: Rename .deb (native/container)
        if: matrix.use_chroot == false
        run: |
          cd ${{ env.PROJ_PATH }}
          DEB=$(ls *.deb | head -n 1)
          mv "$DEB" "ceres-solver_2.2.0_${{ matrix.arch }}_ubuntu${{ matrix.ubuntu }}.deb"

      - name: Rename .deb (chroot ARM64)
        if: matrix.use_chroot == true
        run: |
          cd rootfs/root
          DEB=$(ls *.deb | head -n 1)
          mv "$DEB" "${{ env.PROJ_PATH }}/ceres-solver_2.2.0_${{ matrix.arch }}_ubuntu${{ matrix.ubuntu }}.deb"

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ceres-solver-${{ matrix.arch }}-ubuntu${{ matrix.ubuntu }}
          path: projects/ceres-solver/ceres-solver_2.2.0_${{ matrix.arch }}_ubuntu${{ matrix.ubuntu }}.deb
          if-no-files-found: error
          compression-level: 0

      - name: Upload to GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: projects/ceres-solver/ceres-solver_2.2.0_${{ matrix.arch }}_ubuntu${{ matrix.ubuntu }}.deb
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
